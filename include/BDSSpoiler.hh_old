
#ifndef BDSSpoiler_h
#define BDSSpoiler_h 1

#include"globals.hh"
#include"myAcceleratorComponent.hh"
#include "myMaterials.hh"
#include "G4LogicalVolume.hh"
#include "BDSDriftStepper.hh"

#include "G4ChordFinder.hh"
#include "G4Mag_UsualEqRhs.hh"
#include "G4UserLimits.hh"
#include "G4VisAttributes.hh"
#include "G4Box.hh"
#include "G4Tubs.hh"
#include "EnergyCounterSD.hh"

class BDSSpoiler :public myAcceleratorComponent
{
  public:
    BDSSpoiler(G4String& aName, G4double aLength,G4double bpRad, 
              G4double xAper, G4double yAper,G4Material* SpoilerMaterial);
    ~BDSSpoiler();

  protected:

  private:
  void SpoilerLogicalVolume();
  void BuildInnerSpoiler();

  G4VisAttributes* SetVisAttributes();

  // Geometrical objects:
  G4LogicalVolume* itsInnerSpoiler;
  G4LogicalVolume* itsInnerTubeLogVol;
  G4LogicalVolume* itsInnerBoxLogVol;
  G4VPhysicalVolume* itsPhysiComp;
  G4VPhysicalVolume* itsSpoilerInBmp;

  
  G4Tubs* itsInnerSpoilerTube;
  G4Tubs* itsSpoilerTube;
  G4Box* itsInnerSpoilerBox;
  G4IntersectionSolid* itsInnerBoxInTube;
                    
 

  // field related objects:
  G4UserLimits* itsUserLimits;
  G4VisAttributes* itsVisAttributes;
  G4Mag_UsualEqRhs* itsEqRhs;



private:
   G4Material* itsSpoilerMaterial;
};

#endif
